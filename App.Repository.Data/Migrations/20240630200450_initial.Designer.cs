// <auto-generated />
using System;
using App.Repository.Data.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.Repository.Data.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    [Migration("20240630200450_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("App.Repository.Domain.Entities.Favoritos.Favoritos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("RepositorioId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("SysDateInsert")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("SysDateUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("SysUserInsert")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SysUserUpdate")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuariosId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("App.Repository.Domain.Entities.Repositorios.Repositorios", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Incluido")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Linguagem")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SysDateInsert")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("SysDateUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("SysUserInsert")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SysUserUpdate")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuariosId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Repositorios");
                });

            modelBuilder.Entity("App.Repository.Domain.Entities.Usuarios.Usuarios", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SysDateInsert")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("SysDateUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("SysUserInsert")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SysUserUpdate")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("App.Repository.Domain.Entities.Favoritos.Favoritos", b =>
                {
                    b.HasOne("App.Repository.Domain.Entities.Usuarios.Usuarios", null)
                        .WithMany("Favoritos")
                        .HasForeignKey("UsuariosId");
                });

            modelBuilder.Entity("App.Repository.Domain.Entities.Repositorios.Repositorios", b =>
                {
                    b.HasOne("App.Repository.Domain.Entities.Usuarios.Usuarios", null)
                        .WithMany("Repositorios")
                        .HasForeignKey("UsuariosId");
                });

            modelBuilder.Entity("App.Repository.Domain.Entities.Usuarios.Usuarios", b =>
                {
                    b.Navigation("Favoritos");

                    b.Navigation("Repositorios");
                });
#pragma warning restore 612, 618
        }
    }
}
